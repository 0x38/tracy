$baseline: 1.5 !default;

// baseline($ratio)
//
// Retrieve a value of the baseline for the given ratio to constructs
// a vertical rhythm.
//
// $ratio - Ratio value to apply
@function baseline($ratio: 1) {
  @return $ratio * $baseline + rem;
}

// strip-units($number)
//
// Returns an unitless number.
//
// $number - Number for which you want to remove the unit
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

// line-height($size, $nb-of-lines)
//
// Computes the relative line-height given the size and number of lines
// you want it to fill.
//
// $size        - Size of the current text
// $nb-of-lines - Number of lines (relative to baseline) you want it to fill
@function line-height($size, $nb-of-lines: 1) {
  @return $nb-of-lines * $baseline / strip-units($size);
}

$types: (
  body: (1, 1),
  h6: (1.125, 1),
  h5: (1.266, 1),
  h4: (1.424, 1),
  h3: (1.602, 2),
  h2: (1.802, 2),
  h1: (2.027, 2)
);

@mixin type($name) {
  $data: map-get($types, $name);
  $fs: nth($data, 1);

  font-size: $fs + rem;
  line-height: line-height($fs, nth($data, 2));
}

@mixin align($main, $cross, $direction) {
  display: flex;
  flex-direction: $direction;
  justify-content: $main;
  align-items: $cross;
}

@mixin row($x: flex-start, $y: flex-start) {
  @include align($x, $y, row);
}

@mixin col($x: flex-start, $y: flex-start) {
  @include align($y, $x, column);
}

@mixin expand($grow: 1, $shrink: 1) {
  flex-grow: $grow;
  flex-shrink: $shrink;
}